package com.example.app.winvisited

import android.annotation.SuppressLint
import android.content.Intent
import android.os.Bundle
import android.widget.Button
import android.widget.SearchView
import androidx.appcompat.app.AppCompatActivity
import androidx.recyclerview.widget.LinearLayoutManager
import androidx.recyclerview.widget.RecyclerView
import com.example.app.R
import com.example.app.winmain.PlacesActivity

class AddVisitedCountryActivity : AppCompatActivity() {

    private lateinit var countryAdapter: CountryAdapter
    private lateinit var dbHelper: VisitedCountriesDbHelper

    @SuppressLint("MissingInflatedId")
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_add_visited_country)

        val searchView: SearchView = findViewById(R.id.searchView)

        val sharedPreferences = getSharedPreferences("unique_user_prefs", MODE_PRIVATE)
        val userLogin = sharedPreferences.getString("USER_LOGIN", "")

        dbHelper = VisitedCountriesDbHelper(this)

        val recyclerView: RecyclerView = findViewById(R.id.countryRecyclerView)
        recyclerView.layoutManager = LinearLayoutManager(this)

        val countries = arrayListOf<Country>()

        countries.add(Country(1, "Австралия", "AU"))
        countries.add(Country(2, "Австрия", "AT"))
        countries.add(Country(3, "Азербайджан", "AZ"))
        countries.add(Country(4, "Албания", "AL"))
        countries.add(Country(5, "Алжир", "DZ"))
        countries.add(Country(6, "Андорра", "AD"))
        countries.add(Country(7, "Ангола", "AO"))
        countries.add(Country(8, "Антигуа и Барбуда", "AG"))
        countries.add(Country(9, "Аргентина", "AR"))
        countries.add(Country(10, "Армения", "AM"))
        countries.add(Country(11, "Афганистан", "AF"))
        countries.add(Country(12, "Багамы", "BS"))
        countries.add(Country(13, "Бангладеш", "BD"))
        countries.add(Country(14, "Барбадос", "BB"))
        countries.add(Country(15, "Беларусь", "BY"))
        countries.add(Country(16, "Бельгия", "BE"))
        countries.add(Country(17, "Белиз", "BZ"))
        countries.add(Country(18, "Бенин", "BJ"))
        countries.add(Country(19, "Болгария", "BG"))
        countries.add(Country(20, "Боливия", "BO"))
        countries.add(Country(21, "Босния и Герцеговина", "BA"))
        countries.add(Country(22, "Ботсвана", "BW"))
        countries.add(Country(23, "Бразилия", "BR"))
        countries.add(Country(24, "Бруней", "BN"))
        countries.add(Country(25, "Буркина-Фасо", "BF"))
        countries.add(Country(26, "Бурунди", "BI"))
        countries.add(Country(27, "Вануату", "VU"))
        countries.add(Country(28, "Ватикан", "VA"))
        countries.add(Country(29, "Венгрия", "HU"))
        countries.add(Country(30, "Венесуэла", "VE"))
        countries.add(Country(31, "Вьетнам", "VN"))
        countries.add(Country(32, "Габон", "GA"))
        countries.add(Country(33, "Гайана", "GY"))
        countries.add(Country(34, "Гамбия", "GM"))
        countries.add(Country(35, "Гана", "GH"))
        countries.add(Country(36, "Германия", "DE"))
        countries.add(Country(37, "Гренада", "GD"))
        countries.add(Country(38, "Греция", "GR"))
        countries.add(Country(39, "Грузия", "GE"))
        countries.add(Country(40, "Гренада", "GD"))
        countries.add(Country(41, "Гватемала", "GT"))
        countries.add(Country(42, "Гвинея", "GN"))
        countries.add(Country(43, "Гвинея-Бисау", "GW"))
        countries.add(Country(44, "Дания", "DK"))
        countries.add(Country(45, "Демократическая Республика Конго", "CD"))
        countries.add(Country(46, "Доминика", "DM"))
        countries.add(Country(47, "Доминиканская Республика", "DO"))
        countries.add(Country(48, "Египет", "EG"))
        countries.add(Country(49, "Замбия", "ZM"))
        countries.add(Country(50, "Зимбабве", "ZW"))
        countries.add(Country(51, "Индия", "IN"))
        countries.add(Country(52, "Индонезия", "ID"))
        countries.add(Country(53, "Иран", "IR"))
        countries.add(Country(54, "Ирландия", "IE"))
        countries.add(Country(55, "Исландия", "IS"))
        countries.add(Country(56, "Испания", "ES"))
        countries.add(Country(57, "Италия", "IT"))
        countries.add(Country(58, "Йемен", "YE"))
        countries.add(Country(59, "Кабо-Верде", "CV"))
        countries.add(Country(60, "Казахстан", "KZ"))
        countries.add(Country(61, "Камерун", "CM"))
        countries.add(Country(62, "Канада", "CA"))
        countries.add(Country(63, "Кения", "KE"))
        countries.add(Country(64, "Кипр", "CY"))
        countries.add(Country(65, "Киргизия", "KG"))
        countries.add(Country(66, "Кирибати", "KI"))
        countries.add(Country(67, "Корея, Северная", "KP"))
        countries.add(Country(68, "Корея, Южная", "KR"))
        countries.add(Country(69, "Кувейт", "KW"))
        countries.add(Country(70, "Лаос", "LA"))
        countries.add(Country(71, "Латвия", "LV"))
        countries.add(Country(72, "Лесото", "LS"))
        countries.add(Country(73, "Либерия", "LR"))
        countries.add(Country(74, "Ливан", "LB"))
        countries.add(Country(75, "Ливия", "LY"))
        countries.add(Country(76, "Литва", "LT"))
        countries.add(Country(77, "Люксембург", "LU"))
        countries.add(Country(78, "Маврикий", "MU"))
        countries.add(Country(79, "Мавритания", "MR"))
        countries.add(Country(80, "Мексика", "MX"))
        countries.add(Country(81, "Микронезия", "FM"))
        countries.add(Country(82, "Молдова", "MD"))
        countries.add(Country(83, "Монако", "MC"))
        countries.add(Country(84, "Монголия", "MN"))
        countries.add(Country(85, "Морокко", "MA"))
        countries.add(Country(86, "Мозамбик", "MZ"))
        countries.add(Country(87, "Намибия", "NA"))
        countries.add(Country(88, "Непал", "NP"))
        countries.add(Country(89, "Нигер", "NE"))
        countries.add(Country(90, "Нигерия", "NG"))
        countries.add(Country(91, "Норвегия", "NO"))
        countries.add(Country(92, "Новая Зеландия", "NZ"))
        countries.add(Country(93, "ОАЭ", "AE"))
        countries.add(Country(94, "Оман", "OM"))
        countries.add(Country(95, "Пакистан", "PK"))
        countries.add(Country(96, "Палестина", "PS"))
        countries.add(Country(97, "Панама", "PA"))
        countries.add(Country(98, "Папуа — Новая Гвинея", "PG"))
        countries.add(Country(99, "Парагвай", "PY"))
        countries.add(Country(100, "Перу", "PE"))
        countries.add(Country(101, "Польша", "PL"))
        countries.add(Country(102, "Португалия", "PT"))
        countries.add(Country(103, "Россия", "RU"))
        countries.add(Country(104, "Руанда", "RW"))
        countries.add(Country(105, "Сальвадор", "SV"))
        countries.add(Country(106, "Сан-Марино", "SM"))
        countries.add(Country(107, "Саудовская Аравия", "SA"))
        countries.add(Country(108, "Северная Македония", "MK"))
        countries.add(Country(109, "Сенегал", "SN"))
        countries.add(Country(110, "Сент-Люсия", "LC"))
        countries.add(Country(111, "Сент-Винсент и Гренадины", "VC"))
        countries.add(Country(112, "Сингапур", "SG"))
        countries.add(Country(113, "Сирия", "SY"))
        countries.add(Country(114, "Словакия", "SK"))
        countries.add(Country(115, "Словения", "SI"))
        countries.add(Country(116, "Соединенное Королевство", "GB"))
        countries.add(Country(117, "Соединенные Штаты", "US"))
        countries.add(Country(118, "Таджикистан", "TJ"))
        countries.add(Country(119, "Таиланд", "TH"))
        countries.add(Country(120, "Танзания", "TZ"))
        countries.add(Country(121, "Того", "TG"))
        countries.add(Country(122, "Тонга", "TO"))
        countries.add(Country(123, "Тунис", "TN"))
        countries.add(Country(124, "Туркмения", "TM"))
        countries.add(Country(125, "Турция", "TR"))
        countries.add(Country(126, "Уганда", "UG"))
        countries.add(Country(127, "Узбекистан", "UZ"))
        countries.add(Country(128, "Уругвай", "UY"))
        countries.add(Country(129, "Фиджи", "FJ"))
        countries.add(Country(130, "Филиппины", "PH"))
        countries.add(Country(131, "Финляндия", "FI"))
        countries.add(Country(132, "Франция", "FR"))
        countries.add(Country(133, "Хорватия", "HR"))
        countries.add(Country(134, "Центральноафриканская Республика", "CF"))
        countries.add(Country(135, "Чад", "TD"))
        countries.add(Country(136, "Черногория", "ME"))
        countries.add(Country(137, "Чехия", "CZ"))
        countries.add(Country(138, "Чили", "CL"))
        countries.add(Country(139, "Швейцария", "CH"))
        countries.add(Country(140, "Швеция", "SE"))
        countries.add(Country(141, "Шри-Ланка", "LK"))
        countries.add(Country(142, "Эквадор", "EC"))
        countries.add(Country(143, "Экваториальная Гвинея", "GQ"))
        countries.add(Country(144, "Эстония", "EE"))
        countries.add(Country(145, "Эсватини", "SZ"))
        countries.add(Country(146, "Южноафриканская Республика", "ZA"))
        countries.add(Country(147, "Южный Судан", "SS"))
        countries.add(Country(148, "Ямайка", "JM"))
        countries.add(Country(149, "Япония", "JP"))
        countries.add(Country(150, "Косово", "XK"))
        countries.add(Country(151, "Республика Конго", "CG"))
        countries.add(Country(152, "Сирийская Арабская Республика", "SY"))
        countries.add(Country(153, "Республика Корея", "KR"))
        countries.add(Country(154, "Республика Молдова", "MD"))
        countries.add(Country(155, "Словацкая Республика", "SK"))
        countries.add(Country(156, "Тайвань", "TW"))
        countries.add(Country(157, "Сомали", "SO"))
        countries.add(Country(158, "Српска", "RS"))
        countries.add(Country(159, "Эритрея", "ER"))
        countries.add(Country(160, "Кот-д’Ивуар", "CI"))
        countries.add(Country(161, "Республика Гренада", "GD"))
        countries.add(Country(162, "Республика Гана", "GH"))
        countries.add(Country(163, "Республика Ирак", "IQ"))
        countries.add(Country(164, "Республика Конго", "CG"))
        countries.add(Country(165, "Гренада", "GD"))
        countries.add(Country(166, "Республика Словения", "SI"))
        countries.add(Country(167, "Республика Судан", "SD"))
        countries.add(Country(168, "Тимор-Лешти", "TL"))
        countries.add(Country(169, "Ливийская Арабская Республика", "LY"))
        countries.add(Country(170, "Объединенные Арабские Эмираты", "AE"))
        countries.add(Country(171, "Греция", "GR"))
        countries.add(Country(172, "Катар", "QA"))
        countries.add(Country(173, "Республика Иран", "IR"))
        countries.add(Country(174, "Ливия", "LY"))
        countries.add(Country(175, "Эстония", "EE"))
        countries.add(Country(176, "Южная Корея", "KR"))
        countries.add(Country(177, "Фиджи", "FJ"))
        countries.add(Country(178, "Тайвань", "TW"))
        countries.add(Country(179, "Новая Зеландия", "NZ"))
        countries.add(Country(180, "Боливия", "BO"))
        countries.add(Country(181, "Танзания", "TZ"))
        countries.add(Country(182, "Судан", "SD"))
        countries.add(Country(183, "Сирия", "SY"))
        countries.add(Country(184, "Ирак", "IQ"))
        countries.add(Country(185, "Северная Корея", "KP"))
        countries.add(Country(186, "Южный Судан", "SS"))
        countries.add(Country(187, "Ангола", "AO"))
        countries.add(Country(188, "Новая Зеландия", "NZ"))
        countries.add(Country(189, "Суданы", "SD"))
        countries.add(Country(190, "Судан", "SD"))
        countries.add(Country(191, "Афганистан", "AF"))
        countries.add(Country(192, "Бразилия", "BR"))
        countries.add(Country(193, "Дания", "DK"))
        countries.add(Country(194, "Филиппины", "PH"))
        countries.add(Country(195, "Швейцария", "CH"))
        countries.add(Country(196, "Украина", "UA"))

        if (!userLogin.isNullOrEmpty()) {
            countryAdapter = CountryAdapter(this, countries, dbHelper, userLogin)
            recyclerView.adapter = countryAdapter

            searchView.setOnQueryTextListener(object : SearchView.OnQueryTextListener {
                override fun onQueryTextSubmit(query: String?): Boolean {
                    return false
                }

                override fun onQueryTextChange(newText: String?): Boolean {
                    countryAdapter.filter.filter(newText) // Фильтрация списка
                    return true
                }
            })
        }


        val buttonGoBackToMap: Button = findViewById(R.id.btnBackToMap)
        buttonGoBackToMap.setOnClickListener {
            val intent = Intent(this, PlacesActivity::class.java)
            startActivity(intent)
        }
    }
}